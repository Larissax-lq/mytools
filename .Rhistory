usethis::use_mit_license("Larissa Xu")
usethis::use_mit_license("Larissa Xu")
usethis::use_package("dplyr::fun()")
usethis::use_package("ggplot2")
usethis::use_vignette("mytools", title = "introduction to mytools")
?qscatter
?scatter
?qscatter
ï¼Ÿcor.test
?cor.test
pkgbuild::check_build_tools(debug = TRUE)
pkgbuild::check_build_tools(debug = TRUE)
?qscatter
?stats
?stats1
?stats1
library(mytools)
help(package="mytools")
?stats1
??stats1
library(usethis)
use_package_doc()
mytools
?mytools
install.packages("pkgdown")
install.packages("pkgdown")
library(pkgdown)
use_readme_md()
``` r
build_site()
![](tools.jpg)
![](tools.jpg)
![](tools.jpg)
build_site()
![](tools.jpg)
build_site()
build_site()
\<img src = "tools.jpg" alt = "tools in pocket" width = "200"/\>
<img src = "tools.jpg" alt = "tools in pocket" width = "200"/>
build_site()
build_site()
women
summary(women)
fit <- lm(weight~height, women)
summary(fit)
class(women)
summary(women)
summary.data.frame(women)
class(fi)
class(fit)
summary.lm(fit)
? summary.lm
methods(summary())
methods(summary)
summary.stepfun
summary(princomp)
getAnywhere(summary.princomp)
plot(fit)
pkgdown::build_site()
install.packages("gitcreds")
usethis::create_github_token()
gitcreds::gitcreds_set()
pkgdown::build_site()
library(ggplot2)
# Function to create an APA-style bar graph with error bars and boxed legend title
create_apa_bar_graph <- function(data, x_var, y_var, group_var = NULL, facet_var = NULL,
error_var = NULL, # New parameter for error values
title = "Title",
subtitle = "Subtitle",
x_label = "X-axis Label",
y_label = "Y-axis Label",
legend_title = "Legend Title",
tick_labels = NULL,
bar_color = "skyblue",  # Default color
save_as = NULL) {
# Create the base plot
p <- ggplot(data, aes_string(x = x_var, y = y_var, fill = group_var)) +
geom_bar(stat = "identity", position = position_dodge(), color = "black",
size = 0.5) +  # Black border for each bar
labs(title = title,
subtitle = subtitle,
x = x_label,
y = y_label,
fill = legend_title) +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(size = 14, face = "bold"),  # Bold title
plot.subtitle = element_text(size = 14, face = "italic"),  # Italic subtitle
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
legend.title = element_text(size = 12, face = "bold",
hjust = 0.5, # Center the legend title
margin = margin(b = 5)), # Margin below title
legend.text = element_text(size = 10),
axis.text.x = element_text(size = 12, angle = 45, hjust = 1),
axis.text.y = element_text(size = 12),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.background = element_rect(color = "black", fill = "transparent") # Box around legend
)
# Set custom colors if a group variable is provided
if (!is.null(group_var)) {
p <- p + scale_fill_manual(values = bar_color)
} else {
p <- p + scale_fill_manual(values = c(bar_color))  # For a single bar
}
# Add error bars if an error variable is provided
if (!is.null(error_var)) {
p <- p + geom_errorbar(aes_string(ymin = paste(y_var, "-", error_var),
ymax = paste(y_var, "+", error_var)),
position = position_dodge(0.9),
width = 0.25,
color = "black",
size = 0.5)  # Error bars with black color
}
# Set custom tick labels if provided
if (!is.null(tick_labels)) {
p <- p + scale_x_discrete(labels = tick_labels)
}
# Add faceting if a facet variable is provided
if (!is.null(facet_var)) {
p <- p + facet_wrap(as.formula(paste("~", facet_var)))
}
# Save the plot as a file if specified
if (!is.null(save_as)) {
ggsave(save_as, plot = p, width = 8, height = 6, dpi = 300)
}
# Print the plot
print(p)
}
# Example usage
# Sample data with error values
example_data <- data.frame(
Category = rep(c("A", "B", "C"), each = 4),
Subcategory = rep(c("X1", "X2"), times = 6),
Group = rep(c("Group 1", "Group 2"), each = 2, times = 3),
Values = c(10, 15, 20, 25, 15, 30, 10, 20, 5, 10, 15, 25),
Error = c(2, 3, 1, 4, 2, 2, 3, 1, 1, 2, 2, 3)  # Example error values
)
# Create the grouped bar graph with error bars, bold title, and italic subtitle
create_apa_bar_graph(
data = example_data,
x_var = "Category",
y_var = "Values",
group_var = "Subcategory",
facet_var = "Group",
error_var = "Error",  # Specify the error variable
title = "Example Grouped Bar Graph with Error Bars",
subtitle = "Following APA 7th Edition Guidelines",
x_label = "Categories",
y_label = "Values",
bar_color = c("red", "blue")  # Custom colors for groups
)
#' @title Create APA-Style Bar Graph
#' @description Creates an APA-style bar graph with optional error bars, customizable titles,
#' labels, and a boxed legend title.
#' @param data A data frame containing the variables to be visualized.
#' @param x_var A character string naming the categorical variable for the x-axis.
#' @param y_var A character string naming the numeric variable for the y-axis.
#' @param group_var A character string naming the variable to group bars by (optional).
#' @param facet_var A character string naming the variable for faceting (optional).
#' @param error_var A character string naming the variable for error values (optional).
#' @param title A string for the plot title.
#' @param subtitle A string for the plot subtitle.
#' @param x_label A string for the x-axis label.
#' @param y_label A string for the y-axis label.
#' @param legend_title A string for the legend title.
#' @param tick_labels A vector of custom labels for x-axis ticks (optional).
#' @param bar_color A vector specifying colors for the bars (default is "skyblue").
#' @param save_as A string specifying the file name to save the plot (optional).
#' @returns Returns a ggplot2 graph.
#' @export
#' @import ggplot2
#' @examples
#' # Sample data with error values
#' example_data <- data.frame(
#'   Category = rep(c("A", "B", "C"), each = 4),
#'   Subcategory = rep(c("X1", "X2"), times = 6),
#'   Group = rep(c("Group 1", "Group 2"), each = 2, times = 3),
#'   Values = c(10, 15, 20, 25, 15, 30, 10, 20, 5, 10, 15, 25),
#'   Error = c(2, 3, 1, 4, 2, 2, 3, 1, 1, 2, 2, 3)  # Example error values
#' )
#'
#' # Create the grouped bar graph with error bars, bold title, and italic subtitle
#' apa_bar(
#'   data = example_data,
#'   x_var = "Category",
#'   y_var = "Values",
#'   group_var = "Subcategory",
#'   facet_var = "Group",
#'   error_var = "Error",  # Specify the error variable
#'   title = "Example Grouped Bar Graph with Error Bars",
#'   subtitle = "Following APA 7th Edition Guidelines",
#'   x_label = "Categories",
#'   y_label = "Values",
#'   bar_color = c("red", "blue")  # Custom colors for groups
#' )
apa_bar <- function(data, x_var, y_var, group_var = NULL, facet_var = NULL,
error_var = NULL, # New parameter for error values
title = "Title",
subtitle = "Subtitle",
x_label = "X-axis Label",
y_label = "Y-axis Label",
legend_title = "Legend Title",
tick_labels = NULL,
bar_color = "skyblue",  # Default color
save_as = NULL) {
# Create the base plot
p <- ggplot(data, aes_string(x = x_var, y = y_var, fill = group_var)) +
geom_bar(stat = "identity", position = position_dodge(), color = "black",
size = 0.5) +  # Black border for each bar
labs(title = title,
subtitle = subtitle,
x = x_label,
y = y_label,
fill = legend_title) +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(size = 14, face = "bold"),  # Bold title
plot.subtitle = element_text(size = 14, face = "italic"),  # Italic subtitle
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
legend.title = element_text(size = 12, face = "bold",
hjust = 0.5, # Center the legend title
margin = margin(b = 5)), # Margin below title
legend.text = element_text(size = 10),
axis.text.x = element_text(size = 12, angle = 45, hjust = 1),
axis.text.y = element_text(size = 12),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.background = element_rect(color = "black", fill = "transparent") # Box around legend
)
# Set custom colors if a group variable is provided
if (!is.null(group_var)) {
p <- p + scale_fill_manual(values = bar_color)
} else {
p <- p + scale_fill_manual(values = c(bar_color))  # For a single bar
}
# Add error bars if an error variable is provided
if (!is.null(error_var)) {
p <- p + geom_errorbar(aes_string(ymin = paste(y_var, "-", error_var),
ymax = paste(y_var, "+", error_var)),
position = position_dodge(0.9),
width = 0.25,
color = "black",
size = 0.5)  # Error bars with black color
}
# Set custom tick labels if provided
if (!is.null(tick_labels)) {
p <- p + scale_x_discrete(labels = tick_labels)
}
# Add faceting if a facet variable is provided
if (!is.null(facet_var)) {
p <- p + facet_wrap(as.formula(paste("~", facet_var)))
}
# Save the plot as a file if specified
if (!is.null(save_as)) {
ggsave(save_as, plot = p, width = 8, height = 6, dpi = 300)
}
# Print the plot
print(p)
}
library(ggplot2)
# Function to create an APA-style line chart with error bars and boxed legend title
create_apa_line_chart <- function(data, x_var, y_var, group_var = NULL,
error_var = NULL, # Parameter for error values
title = "Title",
subtitle = "Subtitle",
x_label = "X-axis Label",
y_label = "Y-axis Label",
legend_title = "Legend Title",
save_as = NULL) {
# Create the base plot
p <- ggplot(data, aes_string(x = x_var, y = y_var, color = group_var)) +
geom_line(size = 1) +  # Line size
geom_point(size = 3) +  # Points on the lines
labs(title = title,
subtitle = subtitle,
x = x_label,
y = y_label,
color = legend_title) +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(size = 16, face = "bold"),  # Bold title
plot.subtitle = element_text(size = 16, face = "italic"),  # Italic subtitle, same size as title
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
legend.title = element_text(size = 12, face = "bold",
hjust = 0.5, # Center the legend title
margin = margin(b = 5)), # Margin below title
legend.text = element_text(size = 10),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.background = element_rect(color = "black", fill = "transparent") # Box around legend
)
# Add error bars if an error variable is provided
if (!is.null(error_var)) {
p <- p + geom_errorbar(aes_string(ymin = paste(y_var, "-", error_var),
ymax = paste(y_var, "+", error_var)),
width = 0.2,
color = "black",
size = 0.5)  # Error bars with black color
}
# Save the plot as a file if specified
if (!is.null(save_as)) {
ggsave(save_as, plot = p, width = 8, height = 6, dpi = 300)
}
# Print the plot
print(p)
}
# Example usage
# Sample data for the line chart
example_data <- data.frame(
Time = rep(1:5, 3),
Value = c(10, 12, 15, 14, 18, 8, 9, 11, 13, 14, 20, 22, 21, 23, 24),
Group = rep(c("Group 1", "Group 2", "Group 3"), each = 5),
Error = c(1, 1, 2, 1, 2, 0.5, 1, 1.5, 1, 1, 1, 1, 1, 1, 1)  # Example error values
)
# Create the line chart with error bars and boxed legend title
create_apa_line_chart(
data = example_data,
x_var = "Time",
y_var = "Value",
group_var = "Group",
error_var = "Error",  # Specify the error variable
title = "Example Line Chart with Error Bars",
subtitle = "Following APA 7th Edition Guidelines",
x_label = "Time (Units)",
y_label = "Values"
)
# Example 2: Sample data for depression scores by treatment groups
example_data2 <- data.frame(
Group = rep(c("Control", "Treatment"), each = 5),
Time = rep(c("Day 1", "Day 2", "Day 3", "Day 4", "Day 5"), times = 2),
Depression_Scores = c(20, 22, 19, 21, 23, 25, 27, 26, 28, 30),
Error_Values = c(2, 1, 3, 1, 2, 1, 2, 1, 2, 2)  # Example error values
)
# Create the grouped bar graph with error bars, bold title, and italic subtitle
apa_bar(
data = example_data2,
x_var = "Time",
y_var = "Depression_Scores",
group_var = "Group",
error_var = "Error_Values",  # Specify the error variable
title = "Depression Scores Over Time",
subtitle = "Comparison Between Control and Treatment Groups",
x_label = "Days",
y_label = "Depression Scores",
bar_color = c("lightgreen", "lightcoral"),  # Custom colors for groups
legend_title = "Group"  # Adding legend title
)
# Sample data with error values (imbalanced scenario)
example_imbalanced <- data.frame(
Activity = rep(c("Running", "Swimming", "Cycling"), each = 4),
Session_Type = rep(c("Weekday", "Weekend"), times = 6),
Mean_Duration = c(30, 40, 25, 35, 45, 20, 50, 30, 55, 25, 60, 40),
Error_Value = c(5, 7, 4, 6, 5, 3, 6, 4, 8, 5, 7, 3)  # Example error values
)
# Create the grouped bar graph with error bars
apa_bar(
data = example_imbalanced,
x_var = "Activity",
y_var = "Mean_Duration",
group_var = "Session_Type",
error_var = "Error_Value",  # Specify the error variable
title = "Average Exercise Duration by Activity",
subtitle = "Comparison of Weekday and Weekend Sessions",
x_label = "Activity Type",
y_label = "Mean Duration (minutes)",
bar_color = c("skyblue", "salmon")  # Different custom colors for groups
)
# Note: This example illustrates an imbalanced design, which may result in misleading visual representations.
